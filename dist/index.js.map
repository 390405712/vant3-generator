{"version":3,"file":"index.js","sources":["../lib/FormGenerator.tsx","../lib/utils.ts"],"sourcesContent":["import { Form, CellGroup, Button, Field, Calendar, Cascader, Popup, Checkbox, CheckboxGroup, Radio, RadioGroup, Switch, Picker, DatetimePicker, Stepper, Uploader } from 'vant'\r\nimport { defineComponent, ref } from 'vue'\r\nimport type { Ref } from 'vue'\r\nimport type { FormAttrs, FormOption } from './type.d'\r\nimport type { Expose } from './vant'\r\nimport type { DatetimePickerType } from 'vant/lib/datetime-picker/types'\r\nimport type { CascaderOption } from 'vant/lib/cascader/types'\r\nimport type { PickerColumn, PickerFieldNames, CascaderFieldNames } from 'vant';\r\n\r\nexport default defineComponent({\r\n  name: 'FormGenerator',\r\n  setup(props, { expose, attrs, slots, emit }) {\r\n    const _attrs = attrs as FormAttrs\r\n    const RefFormGenerator = ref()\r\n    const $refs: Record<string, Ref<Expose | undefined>> = {}\r\n    expose(() => ({ ...RefFormGenerator.value, $refs }))\r\n    return () => {\r\n      function renderForm() {\r\n        return (\r\n          <Form class={`FormGenerator`} {..._attrs} ref={RefFormGenerator} >\r\n            <CellGroup>\r\n              {_attrs.formOption.map((formOption) => {\r\n                if (!(formOption.hasOwnProperty('show') && formOption.show === false)) return renderControl(formOption)\r\n              })}\r\n              {_attrs.disabled === true || !_attrs.onSubmit\r\n                ? ''\r\n                : slots?.default\r\n                  ? <>{slots.default()[0].children}</>\r\n                  : <Button loading={_attrs.loading} block type=\"primary\" native-type=\"submit\">提交</Button>\r\n              }\r\n            </CellGroup>\r\n          </Form >\r\n        )\r\n      }\r\n      function renderField(formOption: FormOption & { showPopup?: boolean }, custom?: boolean) {\r\n        let model = custom ? formOption.formItem.text : _attrs.model[formOption.formItem.name]\r\n        return <Field is-link readonly onClick={_attrs.disabled ? () => '' : () => { formOption.showPopup = true }} inputAlign='right' v-model={model} v-slots={{ ...formOption?.formItem?.slots }} {...formOption.formItem} />\r\n      }\r\n      function formatterDate(scope: Date, type: DatetimePickerType = 'datetime') {\r\n        let val\r\n        switch (type) {\r\n          case 'date':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')}`\r\n            break;\r\n          case 'datehour':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')} ${String(scope.getHours()).padStart(2, '0')}`\r\n            break;\r\n          case 'year-month':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}`\r\n            break;\r\n          case 'month-day':\r\n            val = `${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')}`\r\n            break;\r\n          case 'time':\r\n            val = scope\r\n            break;\r\n          case 'datetime':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')} ${String(scope.getHours()).padStart(2, '0')}:${String(scope.getMinutes()).padStart(2, '0')}:${String(scope.getSeconds()).padStart(2, '0')}`\r\n            break;\r\n        }\r\n        return val\r\n      }\r\n      function renderControl(formOption: FormOption) {\r\n        $refs[formOption.formItem.name] = ref()\r\n        function getText(arr: Record<string, any>[], val: string, columnsFieldNames: PickerFieldNames | CascaderFieldNames, splice: boolean = false): any {\r\n          if (!Array.isArray(arr)) return ''\r\n          for (let index = 0; index < arr.length; index++) {\r\n            const item = arr[index];\r\n            if (typeof item === 'string') {\r\n              if (item === val) return item[columnsFieldNames?.text ?? 'text'] || ''\r\n            } else {\r\n              if (item[(columnsFieldNames as PickerFieldNames)?.values ?? (columnsFieldNames as CascaderFieldNames)?.value ?? 'value'] === val) return item[columnsFieldNames?.text ?? 'text'] || ''\r\n            }\r\n            if ((item[columnsFieldNames?.children ?? 'children'] as PickerColumn[])?.length) {\r\n              const text = getText(item[columnsFieldNames?.children ?? 'children'], val, columnsFieldNames)\r\n              if (text) {\r\n                if (splice) return `${item[columnsFieldNames?.text ?? 'text']}/${text}`\r\n                return text\r\n              }\r\n            }\r\n          }\r\n          return null;\r\n        }\r\n        switch (formOption.type) {\r\n          case 'field':\r\n            return <Field ref={$refs[formOption.formItem.name]} inputAlign='right' v-model={_attrs.model[formOption.formItem.name]} {...formOption.formItem} {...formOption.control} v-slots={{ ...formOption?.control?.slots }} />\r\n            break;\r\n          case 'checkbox':\r\n            return <Field inputAlign='right' {...formOption.formItem} v-slots={{\r\n              input: () => (\r\n                <CheckboxGroup ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} direction=\"horizontal\" v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} >\r\n                  {formOption.control.checkboxGroup.map((controlOptionItem) => (\r\n                    <Checkbox  {...controlOptionItem} name={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} >{controlOptionItem.label}</Checkbox>\r\n                  ))}\r\n                </CheckboxGroup>\r\n              )\r\n            }}>\r\n            </Field>\r\n            break;\r\n          case 'radio':\r\n            return <Field inputAlign='right' {...formOption.formItem} v-slots={{\r\n              input: () => (\r\n                <RadioGroup ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} direction=\"horizontal\" v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} >\r\n                  {formOption.control.radioGroup.map((controlOptionItem) => (\r\n                    <Radio name={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} {...controlOptionItem}>{controlOptionItem.label}</Radio>\r\n                  ))}\r\n                </RadioGroup>\r\n              )\r\n            }}>\r\n            </Field>\r\n            break;\r\n          case 'switch':\r\n            return <Field class=\"field-switch\" readonly v-slots={{\r\n              'right-icon': () => (\r\n                <Switch ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} size=\"24px\" modelValue={_attrs.model[formOption.formItem.name]} onUpdate: modelValue={(val) => { _attrs.model[formOption.formItem.name] = val }} {...formOption?.control} v-slots={{ ...formOption?.control?.slots }} />\r\n              )\r\n            }} {...formOption.formItem} >\r\n            </Field>\r\n            break;\r\n          case 'uploader':\r\n            return <Field readonly inputAlign='right' v-slots={{\r\n              'input': () => (\r\n                <Uploader ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} v-slots={{ ...formOption?.control?.slots }} />\r\n              )\r\n            }} {...formOption.formItem} >\r\n            </Field>\r\n            break;\r\n          case 'stepper':\r\n            return <Field readonly v-slots={{\r\n              'right-icon': () => (\r\n                <Stepper ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} button-size=\"21px\" v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} />\r\n              )\r\n            }} {...formOption.formItem} >\r\n            </Field>\r\n            break;\r\n          case 'picker':\r\n            if (!formOption.formItem.hasOwnProperty('text') && _attrs.model[formOption.formItem.name] && formOption?.control?.columns) {\r\n              if (Array.isArray((formOption?.control?.columns as PickerColumn)?.[0]?.values)) {\r\n                formOption.formItem.text = (formOption?.control?.columns as Record<string, any>[]).reduce((arr: string[], item, index: number) => {\r\n                  if (typeof item?.values?.[0] === 'string') {\r\n                    arr.push(item.values?.find((i: string) => i === _attrs.model[formOption.formItem.name]?.[index]))\r\n                  } else {\r\n                    arr.push(item.values?.find((i: Record<string, any>) => i[formOption?.control?.columnsFieldNames?.values ?? 'value'] === _attrs.model[formOption.formItem.name]?.[index])?.[formOption?.control?.columnsFieldNames?.text ?? 'text'])\r\n                  }\r\n                  return arr\r\n                }, []).join('/')\r\n              } else if (Array.isArray(_attrs.model[formOption.formItem.name])) {\r\n\r\n                formOption.formItem.text = _attrs.model[formOption.formItem.name].reduce((arr: string[], item: string) => {\r\n                  arr.push(getText(formOption?.control?.columns as Record<string, any>[], item, formOption?.control?.columnsFieldNames as PickerFieldNames))\r\n                  return arr\r\n                }, []).join('/')\r\n              } else {\r\n                formOption.formItem.text = getText(formOption?.control?.columns as Record<string, any>[], _attrs.model[formOption.formItem.name], formOption?.control?.columnsFieldNames as PickerFieldNames)\r\n              }\r\n            }\r\n            return <>\r\n              {renderField(formOption, true)}\r\n              <Popup v-model={[formOption.showPopup, 'show', ['']]} round position=\"bottom\" {...formOption.popup}>\r\n                <Picker ref={$refs[formOption.formItem.name]} v-model={_attrs.model[formOption.formItem.name]}\r\n                  onCancel={() => { formOption.showPopup = false }}\r\n                  onConfirm={(scope) => {\r\n                    formOption.showPopup = false;\r\n                    if (Array.isArray(scope)) {\r\n                      _attrs.model[formOption.formItem.name] = scope.reduce((arr, item) => {\r\n                        arr.push(typeof item === 'object' ? item?.[formOption?.control?.columnsFieldNames?.values ?? 'value'] : item)\r\n                        return arr\r\n                      }, []);\r\n                      formOption.formItem.text = scope.map((item) => typeof item === 'object' ? item?.[formOption?.control?.columnsFieldNames?.text ?? 'text'] : item).join('/');\r\n                    } else {\r\n                      _attrs.model[formOption.formItem.name] = scope[formOption?.control?.columnsFieldNames?.values ?? 'value'];\r\n                      formOption.formItem.text = scope[formOption?.control?.columnsFieldNames?.text ?? 'text'];\r\n                    }\r\n                  }}\r\n                  v-slots={{ ...formOption?.control?.slots }}\r\n                  {...formOption.control}\r\n                />\r\n              </Popup>\r\n            </>\r\n            break;\r\n          case 'datetimePicker':\r\n            return <>\r\n              {renderField(formOption)}\r\n              <Popup v-model={[formOption.showPopup, 'show', ['']]} round position=\"bottom\" {...formOption.popup}>\r\n                <DatetimePicker ref={$refs[formOption.formItem.name]}\r\n                  onCancel={() => { formOption.showPopup = false }}\r\n                  onConfirm={(scope: Date) => {\r\n                    formOption.showPopup = false;\r\n                    _attrs.model[formOption.formItem.name] = formatterDate(scope, formOption?.control?.type)\r\n                  }}\r\n                  v-slots={{ ...formOption?.control?.slots }}\r\n                  {...formOption.control}\r\n                />\r\n              </Popup>\r\n            </>\r\n            break;\r\n          case 'calendar':\r\n            return <>\r\n              {renderField(formOption, formOption?.control?.type === 'multiple')}\r\n              <Calendar ref={$refs[formOption.formItem.name]} v-model={[formOption.showPopup, 'show', ['']]}\r\n                show-confirm={formOption?.control?.type === 'multiple'}\r\n                onConfirm={(value) => {\r\n                  formOption.showPopup = false;\r\n                  const formatDate = (date: Date) => `${date?.getFullYear?.()}-${String(date?.getMonth?.() + 1).padStart(2, '0')}-${String(date?.getDate?.()).padStart(2, '0')}`\r\n                  switch (formOption?.control?.type) {\r\n                    case 'multiple':\r\n                      _attrs.model[formOption.formItem.name] = value.reduce((arr: string[], item: Date) => {\r\n                        arr.push(formatDate(item))\r\n                        return arr\r\n                      }, [])\r\n                      formOption.formItem.text = `选择了 ${value.length} 个日期`\r\n                      break;\r\n                    case 'range':\r\n                      _attrs.model[formOption.formItem.name] = [formatDate(value[0]), formatDate(value[1])]\r\n                      formOption.formItem.text = `${formatDate(value[0])}~${formatDate(value[1])}`\r\n                      break;\r\n                    default:\r\n                      _attrs.model[formOption.formItem.name] = formatDate(value)\r\n                      break;\r\n                  }\r\n                }}\r\n                v-slots={{ ...formOption?.control?.slots }}\r\n                {...formOption.control}\r\n              />\r\n            </>\r\n            break;\r\n          case 'cascader':\r\n            if (_attrs.model[formOption.formItem.name]) {\r\n              formOption.formItem.text = getText(formOption?.control?.options as CascaderOption[], _attrs.model[formOption.formItem.name], formOption?.control?.fieldNames as CascaderFieldNames, true)\r\n            }\r\n            return <>\r\n              {renderField(formOption, true)}\r\n              <Popup v-model={[formOption.showPopup, 'show', ['']]} round position=\"bottom\" {...formOption.popup}>\r\n                <Cascader ref={$refs[formOption.formItem.name]} v-model={_attrs.model[formOption.formItem.name]}\r\n                  onClose={() => { formOption.showPopup = false }}\r\n                  onFinish={(scope: { value: string | number, selectedOptions: CascaderOption[] }) => {\r\n                    formOption.showPopup = false;\r\n                    _attrs.model[formOption.formItem.name] = scope.value;\r\n                    formOption.formItem.text = scope.selectedOptions.map((item) => item[formOption?.control?.fieldNames?.text ?? 'text']).join('/');\r\n                  }}\r\n                  v-slots={{ ...formOption?.control?.slots }}\r\n                  {...formOption.control}\r\n                />\r\n              </Popup>\r\n            </>\r\n            break;\r\n          case 'slot':\r\n            return <Field readonly inputAlign='right' v-slots={{\r\n              label: () => formOption.formItem.label ?? '',\r\n              ...formOption?.control?.slots,\r\n              input: () => {\r\n                if (formOption?.control?.slots?.input && typeof formOption?.control?.slots?.input === 'function') return <>{formOption?.control?.slots?.input?.({ form: _attrs.model, data: _attrs.model[formOption.formItem.name] })}</>\r\n                if (slots[formOption.formItem.name]) return <>{slots[formOption.formItem.name]?.({ form: _attrs.model, data: _attrs.model[formOption.formItem.name] })}</>\r\n                return _attrs.model[formOption.formItem.name]\r\n              },\r\n            }}\r\n              {...formOption.formItem} />\r\n            break;\r\n        }\r\n      };\r\n      return (\r\n        renderForm()\r\n      )\r\n    }\r\n  },\r\n})","import type { FormRules } from 'element-plus'\r\nimport type { FormOption } from './type.d'\r\nimport type { FieldRule } from 'vant';\r\n\r\ntype option = {\r\n  label: string\r\n  value: string,\r\n}\r\n/**\r\n * @description: 将对象数组转为控件所支持的字段\r\n * @param arr 原始list\r\n * @param label 赋值label的key名\r\n * @param value 赋值value的key名\r\n * @param custom 自定义需要合并的对象\r\n */\r\nexport const getOption = (arr: Record<string, string>[] | string[], label: string, value: string, custom?: {}): option[] => {\r\n  if (!Array.isArray(arr)) return []\r\n  const options: option[] = []\r\n  let customKeys: string[] = []\r\n  if (custom) customKeys = Object.keys(custom)\r\n  arr.forEach((item) => {\r\n    let params: option & Record<string, string> = {\r\n      label: typeof item === 'string' ? item : item[label],\r\n      value: typeof item === 'string' ? item : item[value]\r\n    }\r\n    if (custom) {\r\n      customKeys.forEach((key) => {\r\n        params[key] = (item as Record<string, string>)[key]\r\n      })\r\n    }\r\n    options.push(params)\r\n  })\r\n  return options\r\n}\r\n\r\n/**\r\n * @description: 生成校验配置\r\n * @param formOption 表单配置 FormOption[]\r\n * @param omit 不需要验证的key  string[]\r\n * @return formOption\r\n */\r\nexport const setRequired = (formOption: FormOption[], omit: string[] = []): FormOption[] => {\r\n  const type = {\r\n    'field': '输入',\r\n    'stepper': '输入',\r\n    'picker': '选择',\r\n    'radio': '选择',\r\n    'checkbox': '选择',\r\n    'switch': '选择',\r\n    'datetimePicker': '选择',\r\n    'calendar': '选择',\r\n    'cascader': '选择',\r\n    'uploader': '上传',\r\n    'slot': '',\r\n  }\r\n  formOption.forEach((i) => {\r\n    const FieldRule: FieldRule = { required: true, message: `请${(type[i.type] || '完善')}${i.formItem.label || ''}`, trigger: 'onChange' }\r\n    if (!omit.includes(i.formItem.name)) {\r\n      i.formItem.required = true\r\n      if (!['stepper', 'switch'].includes(i.type)) {\r\n        if (!i.formItem.rules) {\r\n          i.formItem.rules = [FieldRule]\r\n        } else {\r\n          i.formItem.rules.unshift(FieldRule)\r\n        }\r\n        for (let index = 0; index < i.formItem.rules.length; index++) {\r\n          let item = i.formItem.rules[index]\r\n          if (!item.message) item.message = '格式有误'\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return formOption\r\n}"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","setup","props","expose","attrs","slots","emit","_attrs","RefFormGenerator","ref","$refs","value","renderForm","_createVNode","Form","_mergeProps","default","CellGroup","formOption","map","hasOwnProperty","show","renderControl","disabled","onSubmit","_Fragment","children","Button","loading","_createTextVNode","renderField","custom","model","formItem","text","Field","showPopup","$event","formatterDate","scope","type","val","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","getText","arr","columnsFieldNames","splice","Array","isArray","index","length","item","values","control","input","_slot","CheckboxGroup","checkboxGroup","controlOptionItem","Checkbox","label","_slot2","RadioGroup","radioGroup","Radio","right-icon","Switch","Uploader","Stepper","columns","reduce","push","find","i","join","Popup","popup","Picker","onCancel","DatetimePicker","Calendar","formatDate","date","options","fieldNames","Cascader","onClose","selectedOptions","form","data","getOption","customKeys","params","key","setRequired","omit","FieldRule"],"mappings":"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"}