{"version":3,"file":"index.js","sources":["../lib/FormGenerator.tsx","../lib/utils.ts"],"sourcesContent":["import { Form, CellGroup, Button, Field, Calendar, Cascader, Popup, Checkbox, CheckboxGroup, Radio, RadioGroup, Switch, Picker, DatetimePicker, Stepper, Uploader } from 'vant'\r\nimport { defineComponent, ref } from 'vue'\r\nimport type { Ref } from 'vue'\r\nimport type { FormAttrs, FormOption } from './type.d'\r\nimport type { Expose } from './vant'\r\nimport type { DatetimePickerType } from 'vant/lib/datetime-picker/types'\r\nimport type { CascaderOption } from 'vant/lib/cascader/types'\r\n\r\nexport default defineComponent({\r\n  name: 'FormGenerator',\r\n  setup(props, { expose, attrs, slots, emit }) {\r\n    const _attrs = attrs as FormAttrs\r\n    const RefFormGenerator = ref()\r\n    const $refs: Record<string, Ref<Expose | undefined>> = {}\r\n    expose(() => ({ ...RefFormGenerator.value, $refs }))\r\n    return () => {\r\n      function renderForm() {\r\n        return (\r\n          <Form class={`FormGenerator`} {..._attrs} ref={RefFormGenerator} >\r\n            <CellGroup>\r\n              {_attrs.formOption.map((formOption) => {\r\n                if (!(formOption.hasOwnProperty('show') && formOption.show === false)) return renderControl(formOption)\r\n              })}\r\n              {_attrs.disabled === true || !_attrs.onSubmit\r\n                ? ''\r\n                : slots?.default\r\n                  ? <>{slots.default()[0].children}</>\r\n                  : <Button block type=\"primary\" native-type=\"submit\">提交</Button>\r\n              }\r\n            </CellGroup>\r\n          </Form >\r\n        )\r\n      }\r\n      function renderField(formOption: FormOption & { showPopup?: boolean }, custom?: boolean) {\r\n        let model = custom ? formOption.formItem.text : _attrs.model[formOption.formItem.name]\r\n        return <Field is-link readonly onClick={_attrs.disabled ? () => '' : () => { formOption.showPopup = true }} inputAlign='right' v-model={model} v-slots={{ ...formOption?.formItem?.slots }} {...formOption.formItem} />\r\n      }\r\n      function formatterDate(scope: Date, type: DatetimePickerType = 'datetime') {\r\n        let val\r\n        switch (type) {\r\n          case 'date':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')}`\r\n            break;\r\n          case 'datehour':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')} ${String(scope.getHours()).padStart(2, '0')}`\r\n            break;\r\n          case 'year-month':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}`\r\n            break;\r\n          case 'month-day':\r\n            val = `${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')}`\r\n            break;\r\n          case 'time':\r\n            val = scope\r\n            break;\r\n          case 'datetime':\r\n            val = `${scope.getFullYear()}-${String(scope.getMonth() + 1).padStart(2, '0')}-${String(scope.getDate()).padStart(2, '0')} ${String(scope.getHours()).padStart(2, '0')}:${String(scope.getMinutes()).padStart(2, '0')}:${String(scope.getSeconds()).padStart(2, '0')}`\r\n            break;\r\n        }\r\n        return val\r\n      }\r\n      function renderControl(formOption: FormOption) {\r\n        $refs[formOption.formItem.name] = ref()\r\n        switch (formOption.type) {\r\n          case 'field':\r\n            return <Field ref={$refs[formOption.formItem.name]} inputAlign='right' v-model={_attrs.model[formOption.formItem.name]} {...formOption.formItem} {...formOption.control} v-slots={{ ...formOption?.control?.slots }} />\r\n            break;\r\n          case 'checkbox':\r\n            return <Field inputAlign='right' {...formOption.formItem} v-slots={{\r\n              input: () => (\r\n                <CheckboxGroup ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} direction=\"horizontal\" v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} >\r\n                  {formOption.control.checkboxGroup.map((controlOptionItem) => (\r\n                    <Checkbox  {...controlOptionItem} name={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} >{controlOptionItem.label}</Checkbox>\r\n                  ))}\r\n                </CheckboxGroup>\r\n              )\r\n            }}>\r\n            </Field>\r\n            break;\r\n          case 'radio':\r\n            return <Field inputAlign='right' {...formOption.formItem} v-slots={{\r\n              input: () => (\r\n                <RadioGroup ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} direction=\"horizontal\" v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} >\r\n                  {formOption.control.radioGroup.map((controlOptionItem) => (\r\n                    <Radio name={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} {...controlOptionItem}>{controlOptionItem.label}</Radio>\r\n                  ))}\r\n                </RadioGroup>\r\n              )\r\n            }}>\r\n            </Field>\r\n            break;\r\n          case 'switch':\r\n            return <Field class=\"field-switch\" readonly v-slots={{\r\n              'right-icon': () => (\r\n                <Switch ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} size=\"24px\" modelValue={_attrs.model[formOption.formItem.name]} onUpdate:modelValue={(val) => { _attrs.model[formOption.formItem.name] = val }} {...formOption?.control} v-slots={{ ...formOption?.control?.slots }} />\r\n              )\r\n            }} {...formOption.formItem} >\r\n            </Field>\r\n            break;\r\n          case 'uploader':\r\n            return <Field readonly inputAlign='right' v-slots={{\r\n              'input': () => (\r\n                <Uploader ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} v-slots={{ ...formOption?.control?.slots }} />\r\n              )\r\n            }} {...formOption.formItem} >\r\n            </Field>\r\n            break;\r\n          case 'stepper':\r\n            return <Field readonly v-slots={{\r\n              'right-icon': () => (\r\n                <Stepper ref={$refs[formOption.formItem.name]} disabled={_attrs.disabled} button-size=\"21px\" v-model={_attrs.model[formOption.formItem.name]} {...formOption?.control} />\r\n              )\r\n            }} {...formOption.formItem} >\r\n            </Field>\r\n            break;\r\n          case 'picker':\r\n            return <>\r\n              {renderField(formOption, true)}\r\n              <Popup v-model={[formOption.showPopup, 'show', ['']]} round position=\"bottom\" {...formOption.popup}>\r\n                <Picker ref={$refs[formOption.formItem.name]} v-model={_attrs.model[formOption.formItem.name]}\r\n                  onCancel={() => { formOption.showPopup = false }}\r\n                  onConfirm={(scope) => {\r\n                    formOption.showPopup = false;\r\n                    if (Array.isArray(scope)) {\r\n                      _attrs.model[formOption.formItem.name] = scope.reduce((arr, item) => {\r\n                        arr.push(typeof item === 'object' ? item?.[formOption?.control?.columnsFieldNames?.values ?? 'value'] : item)\r\n                        return arr\r\n                      }, []);\r\n                      formOption.formItem.text = scope.map((item) => typeof item === 'object' ? item?.[formOption?.control?.columnsFieldNames?.text ?? 'text'] : item).join('/');\r\n                    } else {\r\n                      _attrs.model[formOption.formItem.name] = scope[formOption?.control?.columnsFieldNames?.values ?? 'value'];\r\n                      formOption.formItem.text = scope[formOption?.control?.columnsFieldNames?.text ?? 'text'];\r\n                    }\r\n                  }}\r\n                  v-slots={{ ...formOption?.control?.slots }}\r\n                  {...formOption.control}\r\n                />\r\n              </Popup>\r\n            </>\r\n            break;\r\n          case 'datetimePicker':\r\n            return <>\r\n              {renderField(formOption)}\r\n              <Popup v-model={[formOption.showPopup, 'show', ['']]} round position=\"bottom\" {...formOption.popup}>\r\n                <DatetimePicker ref={$refs[formOption.formItem.name]}\r\n                  onCancel={() => { formOption.showPopup = false }}\r\n                  onConfirm={(scope: Date) => {\r\n                    formOption.showPopup = false;\r\n                    _attrs.model[formOption.formItem.name] = formatterDate(scope, formOption?.control?.type)\r\n                  }}\r\n                  v-slots={{ ...formOption?.control?.slots }}\r\n                  {...formOption.control}\r\n                />\r\n              </Popup>\r\n            </>\r\n            break;\r\n          case 'calendar':\r\n            return <>\r\n              {renderField(formOption, formOption?.control?.type === 'multiple')}\r\n              <Calendar ref={$refs[formOption.formItem.name]} v-model={[formOption.showPopup, 'show', ['']]}\r\n                show-confirm={formOption?.control?.type === 'multiple'}\r\n                onConfirm={(value) => {\r\n                  formOption.showPopup = false;\r\n                  const formatDate = (date: Date) => `${date?.getFullYear?.()}-${String(date?.getMonth?.() + 1).padStart(2, '0')}-${String(date?.getDate?.()).padStart(2, '0')}`\r\n                  switch (formOption?.control?.type) {\r\n                    case 'multiple':\r\n                      _attrs.model[formOption.formItem.name] = value.reduce((arr: string[], item: Date) => {\r\n                        arr.push(formatDate(item))\r\n                        return arr\r\n                      }, [])\r\n                      formOption.formItem.text = `选择了 ${value.length} 个日期`\r\n                      break;\r\n                    case 'range':\r\n                      _attrs.model[formOption.formItem.name] = [formatDate(value[0]),formatDate(value[1])]\r\n                      break;\r\n                    default:\r\n                      _attrs.model[formOption.formItem.name] = formatDate(value)\r\n                      break;\r\n                  }\r\n                }}\r\n                v-slots={{ ...formOption?.control?.slots }}\r\n                {...formOption.control}\r\n              />\r\n            </>\r\n            break;\r\n          case 'cascader':\r\n            return <>\r\n              {renderField(formOption, true)}\r\n              <Popup v-model={[formOption.showPopup, 'show', ['']]} round position=\"bottom\" {...formOption.popup}>\r\n                <Cascader ref={$refs[formOption.formItem.name]} v-model={_attrs.model[formOption.formItem.name]}\r\n                  onClose={() => { formOption.showPopup = false }}\r\n                  onFinish={(scope: { value: string | number, selectedOptions: CascaderOption[] }) => {\r\n                    formOption.showPopup = false;\r\n                    _attrs.model[formOption.formItem.name] = scope.value;\r\n                    formOption.formItem.text = scope.selectedOptions.map((item) => item[formOption?.control?.fieldNames?.text ?? 'text']).join('/');\r\n                  }}\r\n                  v-slots={{ ...formOption?.control?.slots }}\r\n                  {...formOption.control}\r\n                />\r\n              </Popup>\r\n            </>\r\n            break;\r\n          case 'slot':\r\n            return <Field readonly inputAlign='right' v-slots={{\r\n              label: () => formOption.formItem.label ?? '',\r\n              ...formOption?.control?.slots,\r\n              input: () => {\r\n                if (formOption?.control?.slots?.input && typeof formOption?.control?.slots?.input === 'function') return <>{formOption?.control?.slots?.input?.({ form: _attrs.model, data: _attrs.model[formOption.formItem.name] })}</>\r\n                if (slots[formOption.formItem.name]) return <>{slots[formOption.formItem.name]?.({ form: _attrs.model, data: _attrs.model[formOption.formItem.name] })}</>\r\n                return _attrs.model[formOption.formItem.name]\r\n              },\r\n            }}\r\n              {...formOption.formItem} />\r\n            break;\r\n        }\r\n      };\r\n      return (\r\n        renderForm()\r\n      )\r\n    }\r\n  },\r\n})","import type { FormRules } from 'element-plus'\r\nimport type { FormOption } from './type.d'\r\nimport type { FieldRule } from 'vant';\r\n\r\ntype option = {\r\n  label: string\r\n  value: string,\r\n}\r\n/**\r\n * @description: 将对象数组转为控件所支持的字段\r\n * @param arr 原始list\r\n * @param label 赋值label的key名\r\n * @param value 赋值value的key名\r\n * @param custom 自定义需要合并的对象\r\n */\r\nexport const getOption = (arr: Record<string, string>[] | string[], label: string, value: string, custom?: {}): option[] => {\r\n  if (!Array.isArray(arr)) return []\r\n  const options: option[] = []\r\n  let customKeys: string[] = []\r\n  if (custom) customKeys = Object.keys(custom)\r\n  arr.forEach((item) => {\r\n    let params: option & Record<string, string> = {\r\n      label: typeof item === 'string' ? item : item[label],\r\n      value: typeof item === 'string' ? item : item[value]\r\n    }\r\n    if (custom) {\r\n      customKeys.forEach((key) => {\r\n        params[key] = (item as Record<string, string>)[key]\r\n      })\r\n    }\r\n    options.push(params)\r\n  })\r\n  return options\r\n}\r\n\r\n/**\r\n * @description: 生成校验配置\r\n * @param formOption 表单配置 FormOption[]\r\n * @param omit 不需要验证的key  string[]\r\n * @return formOption\r\n */\r\nexport const setRequired = (formOption: FormOption[], omit: string[] = []): FormOption[] => {\r\n  const type = {\r\n    'field': '输入',\r\n    'stepper': '输入',\r\n    'picker': '选择',\r\n    'radio': '选择',\r\n    'checkbox': '选择',\r\n    'switch': '选择',\r\n    'datetimePicker': '选择',\r\n    'calendar': '选择',\r\n    'cascader': '选择',\r\n    'uploader': '上传',\r\n    'slot': '',\r\n  }\r\n  formOption.forEach((i) => {\r\n    const FieldRule: FieldRule = { required: true, message: `请${(type[i.type] || '完善')}${i.formItem.label || ''}`, trigger: 'onChange' }\r\n    if (!omit.includes(i.formItem.name)) {\r\n      i.formItem.required = true\r\n      if (!['stepper', 'switch'].includes(i.type)) {\r\n        if (!i.formItem.rules) {\r\n          i.formItem.rules = [FieldRule]\r\n        } else {\r\n          i.formItem.rules.unshift(FieldRule)\r\n        }\r\n        for (let index = 0; index < i.formItem.rules.length; index++) {\r\n          let item = i.formItem.rules[index]\r\n          if (!item.message) item.message = '格式有误'\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return formOption\r\n}"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","setup","props","expose","attrs","slots","emit","_attrs","RefFormGenerator","ref","$refs","value","renderForm","_createVNode","Form","_mergeProps","default","CellGroup","formOption","map","hasOwnProperty","show","renderControl","disabled","onSubmit","_Fragment","children","Button","_createTextVNode","renderField","custom","model","formItem","text","Field","showPopup","$event","formatterDate","scope","type","val","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","control","input","_slot","CheckboxGroup","checkboxGroup","controlOptionItem","Checkbox","label","_slot2","RadioGroup","radioGroup","Radio","right-icon","Switch","Uploader","Stepper","Popup","popup","Picker","onCancel","Array","isArray","reduce","arr","item","push","columnsFieldNames","values","join","DatetimePicker","Calendar","formatDate","date","length","Cascader","onClose","selectedOptions","fieldNames","form","data","getOption","options","customKeys","params","key","setRequired","omit","i","FieldRule","index"],"mappings":"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"}