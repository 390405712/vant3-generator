{"version":3,"file":"utils-03f79311.js","sources":["../lib/utils.ts"],"sourcesContent":["import type { FormRules } from 'element-plus'\r\nimport type { FormOption } from './type.d'\r\nimport type { FieldRule } from 'vant';\r\n\r\ntype option = {\r\n  label: string\r\n  value: string,\r\n}\r\n/**\r\n * @description: 将对象数组转为控件所支持的字段\r\n * @param arr 原始list\r\n * @param label 赋值label的key名\r\n * @param value 赋值value的key名\r\n * @param custom 自定义需要合并的对象\r\n */\r\nexport const getOption = (arr: Record<string, string>[] | string[], label: string, value: string, custom?: {}): option[] => {\r\n  if (!Array.isArray(arr)) return []\r\n  const options: option[] = []\r\n  let customKeys: string[] = []\r\n  if (custom) customKeys = Object.keys(custom)\r\n  arr.forEach((item) => {\r\n    let params: option & Record<string, string> = {\r\n      label: typeof item === 'string' ? item : item[label],\r\n      value: typeof item === 'string' ? item : item[value]\r\n    }\r\n    if (custom) {\r\n      customKeys.forEach((key) => {\r\n        params[key] = (item as Record<string, string>)[key]\r\n      })\r\n    }\r\n    options.push(params)\r\n  })\r\n  return options\r\n}\r\n\r\n/**\r\n * @description: 生成校验配置\r\n * @param formOption 表单配置 FormOption[]\r\n * @param omit 不需要验证的key  string[]\r\n * @return formOption\r\n */\r\nexport const setRequired = (formOption: FormOption[], omit: string[] = []): FormOption[] => {\r\n  const type = {\r\n    'field': '输入',\r\n    'stepper': '输入',\r\n    'picker': '选择',\r\n    'radio': '选择',\r\n    'checkbox': '选择',\r\n    'switch': '选择',\r\n    'datetimePicker': '选择',\r\n    'calendar': '选择',\r\n    'cascader': '选择',\r\n    'uploader': '上传',\r\n    'slot': '',\r\n  }\r\n  formOption.forEach((i) => {\r\n    const FieldRule: FieldRule = { required: true, message: `请${(type[i.type] || '完善')}${i.formItem.label || ''}`, trigger: 'onChange' }\r\n    if (!omit.includes(i.formItem.name)) {\r\n      i.formItem.required = true\r\n      if (!['stepper', 'switch'].includes(i.type)) {\r\n        if (!i.formItem.rules) {\r\n          i.formItem.rules = [FieldRule]\r\n        } else {\r\n          i.formItem.rules.unshift(FieldRule)\r\n        }\r\n        for (let index = 0; index < i.formItem.rules.length; index++) {\r\n          let item = i.formItem.rules[index]\r\n          if (!item.message) item.message = '格式有误'\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return formOption\r\n}"],"names":["getOption","arr","label","value","custom","options","customKeys","item","params","key","setRequired","formOption","omit","type","i","FieldRule","index"],"mappings":"AAeO,MAAMA,IAAY,CAACC,GAA0CC,GAAeC,GAAeC,MAA0B;AACtH,MAAA,CAAC,MAAM,QAAQH,CAAG;AAAG,WAAO;AAChC,QAAMI,IAAoB,CAAA;AAC1B,MAAIC,IAAuB,CAAA;AACvB,SAAAF,MAAqBE,IAAA,OAAO,KAAKF,CAAM,IACvCH,EAAA,QAAQ,CAACM,MAAS;AACpB,QAAIC,IAA0C;AAAA,MAC5C,OAAO,OAAOD,KAAS,WAAWA,IAAOA,EAAKL,CAAK;AAAA,MACnD,OAAO,OAAOK,KAAS,WAAWA,IAAOA,EAAKJ,CAAK;AAAA,IAAA;AAErD,IAAIC,KACSE,EAAA,QAAQ,CAACG,MAAQ;AACnB,MAAAD,EAAAC,CAAG,IAAKF,EAAgCE,CAAG;AAAA,IAAA,CACnD,GAEHJ,EAAQ,KAAKG,CAAM;AAAA,EAAA,CACpB,GACMH;AACT,GAQaK,IAAc,CAACC,GAA0BC,IAAiB,OAAqB;AAC1F,QAAMC,IAAO;AAAA,IACX,OAAS;AAAA,IACT,SAAW;AAAA,IACX,QAAU;AAAA,IACV,OAAS;AAAA,IACT,UAAY;AAAA,IACZ,QAAU;AAAA,IACV,gBAAkB;AAAA,IAClB,UAAY;AAAA,IACZ,UAAY;AAAA,IACZ,UAAY;AAAA,IACZ,MAAQ;AAAA,EAAA;AAEC,SAAAF,EAAA,QAAQ,CAACG,MAAM;AACxB,UAAMC,IAAuB,EAAE,UAAU,IAAM,SAAS,IAAKF,EAAKC,EAAE,IAAI,KAAK,OAAQA,EAAE,SAAS,SAAS,MAAM,SAAS;AACxH,QAAI,CAACF,EAAK,SAASE,EAAE,SAAS,IAAI,MAChCA,EAAE,SAAS,WAAW,IAClB,CAAC,CAAC,WAAW,QAAQ,EAAE,SAASA,EAAE,IAAI,IAAG;AACvC,MAACA,EAAE,SAAS,QAGZA,EAAA,SAAS,MAAM,QAAQC,CAAS,IAFhCD,EAAA,SAAS,QAAQ,CAACC,CAAS;AAI/B,eAASC,IAAQ,GAAGA,IAAQF,EAAE,SAAS,MAAM,QAAQE,KAAS;AAC5D,YAAIT,IAAOO,EAAE,SAAS,MAAME,CAAK;AACjC,QAAKT,EAAK,YAASA,EAAK,UAAU;AAAA,MACpC;AAAA,IACF;AAAA,EACF,CACD,GACMI;AACT;;;;;"}